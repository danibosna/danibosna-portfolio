import { EventProcessor, Hub, Integration } from '@sentry/types';
type SpotlightBrowserIntegationOptions = {
    /**
     * The URL of the Sidecar instance to connect and forward events to.
     * If not set, Spotlight will try to connect to the Sidecar running on localhost:8969.
     *
     * @default "http://localhost:8969/stream"
     */
    sidecarUrl?: string;
};
export declare class Spotlight implements Integration {
    name: string;
    private _sidecarUrl;
    constructor(options?: SpotlightBrowserIntegationOptions);
    setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void;
}
type FetchImpl = typeof fetch;
/**
 * We want to get an unpatched fetch implementation to avoid capturing our own calls.
 * TODO: We might need to expose this as a utitly function so people can make requests without the SDK picking it put
 */
export declare function getNativeFetchImplementation(): FetchImpl;
export {};
