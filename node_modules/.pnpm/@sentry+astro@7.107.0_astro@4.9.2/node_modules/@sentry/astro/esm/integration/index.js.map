{"version":3,"file":"index.js","sources":["../../../src/integration/index.ts"],"sourcesContent":["import * as fs from 'fs';\nimport * as path from 'path';\nimport { sentryVitePlugin } from '@sentry/vite-plugin';\nimport type { AstroConfig, AstroIntegration } from 'astro';\n\nimport { buildClientSnippet, buildSdkInitFileImportSnippet, buildServerSnippet } from './snippets';\nimport type { SentryOptions } from './types';\n\nconst PKG_NAME = '@sentry/astro';\n\nexport const sentryAstro = (options: SentryOptions = {}): AstroIntegration => {\n  return {\n    name: PKG_NAME,\n    hooks: {\n      // eslint-disable-next-line complexity\n      'astro:config:setup': async ({ updateConfig, injectScript, addMiddleware, config, command, logger }) => {\n        // The third param here enables loading of all env vars, regardless of prefix\n        // see: https://main.vitejs.dev/config/#using-environment-variables-in-config\n\n        // TODO: Ideally, we want to load the environment with vite like this:\n        // const env = loadEnv('production', process.cwd(), '');\n        // However, this currently throws a build error.\n        // Will revisit this later.\n        const env = process.env;\n\n        const sdkEnabled = {\n          client: typeof options.enabled === 'boolean' ? options.enabled : options.enabled?.client ?? true,\n          server: typeof options.enabled === 'boolean' ? options.enabled : options.enabled?.server ?? true,\n        };\n\n        const sourceMapsNeeded = sdkEnabled.client || sdkEnabled.server;\n        const uploadOptions = options.sourceMapsUploadOptions || {};\n        const shouldUploadSourcemaps = (sourceMapsNeeded && uploadOptions?.enabled) ?? true;\n\n        // We don't need to check for AUTH_TOKEN here, because the plugin will pick it up from the env\n        if (shouldUploadSourcemaps && command !== 'dev') {\n          updateConfig({\n            vite: {\n              build: {\n                sourcemap: true,\n              },\n              plugins: [\n                sentryVitePlugin({\n                  org: uploadOptions.org ?? env.SENTRY_ORG,\n                  project: uploadOptions.project ?? env.SENTRY_PROJECT,\n                  authToken: uploadOptions.authToken ?? env.SENTRY_AUTH_TOKEN,\n                  telemetry: uploadOptions.telemetry ?? true,\n                  sourcemaps: {\n                    assets: uploadOptions.assets ?? [getSourcemapsAssetsGlob(config)],\n                  },\n                  debug: options.debug ?? false,\n                }),\n              ],\n            },\n          });\n        }\n\n        if (sdkEnabled.client) {\n          const pathToClientInit = options.clientInitPath\n            ? path.resolve(options.clientInitPath)\n            : findDefaultSdkInitFile('client');\n\n          if (pathToClientInit) {\n            options.debug && logger.info(`Using ${pathToClientInit} for client init.`);\n            injectScript('page', buildSdkInitFileImportSnippet(pathToClientInit));\n          } else {\n            options.debug && logger.info('Using default client init.');\n            injectScript('page', buildClientSnippet(options || {}));\n          }\n        }\n\n        if (sdkEnabled.server) {\n          const pathToServerInit = options.serverInitPath\n            ? path.resolve(options.serverInitPath)\n            : findDefaultSdkInitFile('server');\n          if (pathToServerInit) {\n            options.debug && logger.info(`Using ${pathToServerInit} for server init.`);\n            injectScript('page-ssr', buildSdkInitFileImportSnippet(pathToServerInit));\n          } else {\n            options.debug && logger.info('Using default server init.');\n            injectScript('page-ssr', buildServerSnippet(options || {}));\n          }\n\n          // Prevent Sentry from being externalized for SSR.\n          // Cloudflare like environments have Node.js APIs are available under `node:` prefix.\n          // Ref: https://developers.cloudflare.com/workers/runtime-apis/nodejs/\n          if (config?.adapter?.name.startsWith('@astrojs/cloudflare')) {\n            updateConfig({\n              vite: {\n                ssr: {\n                  // @sentry/node is required in case we have 2 different @sentry/node\n                  // packages installed in the same project.\n                  // Ref: https://github.com/getsentry/sentry-javascript/issues/10121\n                  noExternal: ['@sentry/astro', '@sentry/node'],\n                },\n              },\n            });\n          }\n        }\n\n        const isSSR = config && (config.output === 'server' || config.output === 'hybrid');\n        const shouldAddMiddleware = sdkEnabled.server && options.autoInstrumentation?.requestHandler !== false;\n\n        // Guarding calling the addMiddleware function because it was only introduced in astro@3.5.0\n        // Users on older versions of astro will need to add the middleware manually.\n        const supportsAddMiddleware = typeof addMiddleware === 'function';\n\n        if (supportsAddMiddleware && isSSR && shouldAddMiddleware) {\n          addMiddleware({\n            order: 'pre',\n            entrypoint: '@sentry/astro/middleware',\n          });\n        }\n      },\n    },\n  };\n};\n\nconst possibleFileExtensions = ['ts', 'js', 'tsx', 'jsx', 'mjs', 'cjs', 'mts'];\n\nfunction findDefaultSdkInitFile(type: 'server' | 'client'): string | undefined {\n  const cwd = process.cwd();\n  return possibleFileExtensions\n    .map(e => path.resolve(path.join(cwd, `sentry.${type}.config.${e}`)))\n    .find(filename => fs.existsSync(filename));\n}\n\nfunction getSourcemapsAssetsGlob(config: AstroConfig): string {\n  // The vercel adapter puts the output into its .vercel directory\n  // However, the way this adapter is written, the config.outDir value is update too late for\n  // us to reliably detect it. Also, server files are first temporarily written to <root>/dist and then\n  // only copied over to <root>/.vercel. This seems to happen too late though.\n  // So we glob on both of these directories.\n  // Another case of \"it ain't pretty but it works\":(\n  if (config.adapter?.name?.startsWith('@astrojs/vercel')) {\n    return '{.vercel,dist}/**/*';\n  }\n\n  // paths are stored as \"file://\" URLs\n  const outDirPathname = config.outDir && path.resolve(config.outDir.pathname);\n  const rootDirName = path.resolve(config.root?.pathname || process.cwd());\n\n  if (outDirPathname) {\n    const relativePath = path.relative(rootDirName, outDirPathname);\n    return `${relativePath}/**/*`;\n  }\n\n  // fallback to default output dir\n  return 'dist/**/*';\n}\n"],"names":[],"mappings":"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"}