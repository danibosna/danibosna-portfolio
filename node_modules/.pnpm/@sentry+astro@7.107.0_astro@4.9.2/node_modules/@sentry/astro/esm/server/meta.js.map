{"version":3,"file":"meta.js","sources":["../../../src/server/meta.ts"],"sourcesContent":["import {\n  getDynamicSamplingContextFromClient,\n  getDynamicSamplingContextFromSpan,\n  getRootSpan,\n  spanToTraceHeader,\n} from '@sentry/core';\nimport type { Client, Scope, Span } from '@sentry/types';\nimport {\n  TRACEPARENT_REGEXP,\n  dynamicSamplingContextToSentryBaggageHeader,\n  generateSentryTraceHeader,\n  logger,\n} from '@sentry/utils';\n\n/**\n * Extracts the tracing data from the current span or from the client's scope\n * (via transaction or propagation context) and renders the data to <meta> tags.\n *\n * This function creates two serialized <meta> tags:\n * - `<meta name=\"sentry-trace\" content=\"...\"/>`\n * - `<meta name=\"baggage\" content=\"...\"/>`\n *\n * TODO: Extract this later on and export it from the Core or Node SDK\n *\n * @param span the currently active span\n * @param client the SDK's client\n *\n * @returns an object with the two serialized <meta> tags\n */\nexport function getTracingMetaTags(\n  span: Span | undefined,\n  scope: Scope,\n  client: Client | undefined,\n): { sentryTrace: string; baggage?: string } {\n  const { dsc, sampled, traceId } = scope.getPropagationContext();\n  const rootSpan = span && getRootSpan(span);\n\n  const sentryTrace = span ? spanToTraceHeader(span) : generateSentryTraceHeader(traceId, undefined, sampled);\n\n  const dynamicSamplingContext = rootSpan\n    ? getDynamicSamplingContextFromSpan(rootSpan)\n    : dsc\n      ? dsc\n      : client\n        ? getDynamicSamplingContextFromClient(traceId, client, scope)\n        : undefined;\n\n  const baggage = dynamicSamplingContextToSentryBaggageHeader(dynamicSamplingContext);\n\n  const isValidSentryTraceHeader = TRACEPARENT_REGEXP.test(sentryTrace);\n  if (!isValidSentryTraceHeader) {\n    logger.warn('Invalid sentry-trace data. Returning empty <meta name=\"sentry-trace\"/> tag');\n  }\n\n  const validBaggage = isValidBaggageString(baggage);\n  if (!validBaggage) {\n    logger.warn('Invalid baggage data. Returning empty <meta name=\"baggage\"/> tag');\n  }\n\n  return {\n    sentryTrace: `<meta name=\"sentry-trace\" content=\"${isValidSentryTraceHeader ? sentryTrace : ''}\"/>`,\n    baggage: baggage && `<meta name=\"baggage\" content=\"${validBaggage ? baggage : ''}\"/>`,\n  };\n}\n\n/**\n * Tests string against baggage spec as defined in:\n *\n * - W3C Baggage grammar: https://www.w3.org/TR/baggage/#definition\n * - RFC7230 token definition: https://datatracker.ietf.org/doc/html/rfc7230#section-3.2.6\n *\n * exported for testing\n */\nexport function isValidBaggageString(baggage?: string): boolean {\n  if (!baggage || !baggage.length) {\n    return false;\n  }\n  const keyRegex = \"[-!#$%&'*+.^_`|~A-Za-z0-9]+\";\n  const valueRegex = '[!#-+-./0-9:<=>?@A-Z\\\\[\\\\]a-z{-}]+';\n  const spaces = '\\\\s*';\n  // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor -- RegExp for readability, no user input\n  const baggageRegex = new RegExp(\n    `^${keyRegex}${spaces}=${spaces}${valueRegex}(${spaces},${spaces}${keyRegex}${spaces}=${spaces}${valueRegex})*$`,\n  );\n  return baggageRegex.test(baggage);\n}\n"],"names":[],"mappings":";;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,kBAAkB;AAClC,EAAE,IAAI;AACN,EAAE,KAAK;AACP,EAAE,MAAM;AACR,EAA6C;AAC7C,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,OAAQ,EAAA,GAAI,KAAK,CAAC,qBAAqB,EAAE,CAAA;AACjE,EAAE,MAAM,WAAW,IAAA,IAAQ,WAAW,CAAC,IAAI,CAAC,CAAA;AAC5C;AACA,EAAE,MAAM,WAAY,GAAE,IAAK,GAAE,iBAAiB,CAAC,IAAI,CAAE,GAAE,yBAAyB,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC,CAAA;AAC7G;AACA,EAAE,MAAM,yBAAyB,QAAA;AACjC,MAAM,iCAAiC,CAAC,QAAQ,CAAA;AAChD,MAAM,GAAA;AACN,QAAQ,GAAA;AACR,QAAQ,MAAA;AACR,UAAU,mCAAmC,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,CAAA;AACpE,UAAU,SAAS,CAAA;AACnB;AACA,EAAE,MAAM,OAAQ,GAAE,2CAA2C,CAAC,sBAAsB,CAAC,CAAA;AACrF;AACA,EAAE,MAAM,2BAA2B,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;AACvE,EAAE,IAAI,CAAC,wBAAwB,EAAE;AACjC,IAAI,MAAM,CAAC,IAAI,CAAC,4EAA4E,CAAC,CAAA;AAC7F,GAAE;AACF;AACA,EAAE,MAAM,YAAa,GAAE,oBAAoB,CAAC,OAAO,CAAC,CAAA;AACpD,EAAE,IAAI,CAAC,YAAY,EAAE;AACrB,IAAI,MAAM,CAAC,IAAI,CAAC,kEAAkE,CAAC,CAAA;AACnF,GAAE;AACF;AACA,EAAE,OAAO;AACT,IAAI,WAAW,EAAE,CAAC,mCAAmC,EAAE,wBAAA,GAA2B,WAAA,GAAc,EAAE,CAAC,GAAG,CAAC;AACvG,IAAI,OAAO,EAAE,OAAQ,IAAG,CAAC,8BAA8B,EAAE,YAAa,GAAE,OAAQ,GAAE,EAAE,CAAC,GAAG,CAAC;AACzF,GAAG,CAAA;AACH,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,oBAAoB,CAAC,OAAO,EAAoB;AAChE,EAAE,IAAI,CAAC,OAAA,IAAW,CAAC,OAAO,CAAC,MAAM,EAAE;AACnC,IAAI,OAAO,KAAK,CAAA;AAChB,GAAE;AACF,EAAE,MAAM,QAAS,GAAE,6BAA6B,CAAA;AAChD,EAAE,MAAM,UAAW,GAAE,oCAAoC,CAAA;AACzD,EAAE,MAAM,MAAO,GAAE,MAAM,CAAA;AACvB;AACA,EAAE,MAAM,YAAA,GAAe,IAAI,MAAM;AACjC,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAA,MAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,UAAA,CAAA,CAAA,EAAA,MAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,QAAA,CAAA,EAAA,MAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,UAAA,CAAA,GAAA,CAAA;AACA,GAAA,CAAA;AACA,EAAA,OAAA,YAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA;AACA;;;;"}